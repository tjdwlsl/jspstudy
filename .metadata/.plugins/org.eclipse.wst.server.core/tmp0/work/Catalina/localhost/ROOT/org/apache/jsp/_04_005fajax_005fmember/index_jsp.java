/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-24 07:24:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._04_005fajax_005fmember;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("    span { width: 150px; color: red;}\r\n");
      out.write("    input{border:1px solid red;}\r\n");
      out.write("    table{width: 80%; margin: 0 auto;}\r\n");
      out.write("    table,th,td {border: 1px solid gray; text-align: center;}\r\n");
      out.write("    h2{text-align: center;}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.0/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"> \r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("	// 실행하자마자 DB정보 가져오기\r\n");
      out.write("	function getList(){\r\n");
      out.write("		//초기화(안하며 계속 쌓임)\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : \"/MyController8\",\r\n");
      out.write("			dataType : \"xml\",\r\n");
      out.write("			method : \"get\",\r\n");
      out.write("			success : function(data){\r\n");
      out.write("				// console.log(data);\r\n");
      out.write("				var tbody=\"\";\r\n");
      out.write("				$(data).find(\"member\").each(function() {\r\n");
      out.write("					tbody +=\"<tr>\"\r\n");
      out.write("					tbody +=\"<td>\" + $(this).find(\"idx\").text()+\"</td>\";\r\n");
      out.write("					tbody +=\"<td>\" + $(this).find(\"id\").text()+\"</td>\";\r\n");
      out.write("					tbody +=\"<td>\" + $(this).find(\"pw\").text()+\"</td>\";\r\n");
      out.write("					tbody +=\"<td>\" + $(this).find(\"name\").text()+\"</td>\";\r\n");
      out.write("					tbody +=\"<td>\" + $(this).find(\"age\").text()+\"</td>\";\r\n");
      out.write("					tbody +=\"<td>\" + $(this).find(\"reg\").text()+\"</td>\";\r\n");
      out.write("					tbody +=\"<td><input type= 'button' value='삭제' class='del' name='\" + $(this).find(\"idx\").text() + \"'></td>\";\r\n");
      out.write("					tbody +=\"</tr>\"\r\n");
      out.write("				});\r\n");
      out.write("				$(\"#tbody\").append(tbody);\r\n");
      out.write("\r\n");
      out.write("			},\r\n");
      out.write("			error : function() {\r\n");
      out.write("				alert(\"다 시 해\");\r\n");
      out.write("			}\r\n");
      out.write("		});	\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	// 삭제\r\n");
      out.write("	$(\"table\").on(\"click\", \".del\", function() {\r\n");
      out.write("		// alert($(this).attr(\"name\"));\r\n");
      out.write("		// 파라미터를 보내야 함(data써야함)(data랑 dataType이랑 틀림)\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : \"/MyController9\",\r\n");
      out.write("			dataType : \"text\",\r\n");
      out.write("			method : \"get\",\r\n");
      out.write("			data : \"m_idx=\"+$(this).attr(\"name\"),\r\n");
      out.write("			success : function(data){\r\n");
      out.write("				//console.log(data);\r\n");
      out.write("				if(data==0){\r\n");
      out.write("					alert(\"삭제 실패\");\r\n");
      out.write("				}else{\r\n");
      out.write("					alert(\"삭제 성공\");\r\n");
      out.write("					$(\"#tbody\").empty();\r\n");
      out.write("					getList();\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			error : function() {\r\n");
      out.write("				alert(\"다 시 해\");\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	// async : false, 비동기 안함, 순서대로 진행\r\n");
      out.write("	$(\"#m_id\").keyup(function() {\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : \"/MyController10\",\r\n");
      out.write("			dataType : \"text\",\r\n");
      out.write("			method : \"get\",\r\n");
      out.write("			data : \"m_id=\"+$(\"#m_id\").val(),\r\n");
      out.write("			success : function(data) {\r\n");
      out.write("				if(data >= 1){\r\n");
      out.write("					//console.log(\"사용불가\");\r\n");
      out.write("					$(\"span\").text(\"사용불가\");\r\n");
      out.write("					$(\"#btn\").attr(\"disabled\", \"disabled\");\r\n");
      out.write("				}else{\r\n");
      out.write("					//console.log(\"사용가능\");\r\n");
      out.write("					$(\"span\").text(\"사용가능\");\r\n");
      out.write("					$(\"#btn\").removeAttr(\"disabled\");\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			error : function() {\r\n");
      out.write("				alert(\"다 시 해 2\")\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	// 회원가입\r\n");
      out.write("	// form을 이용해서 데이터를 전달할 때는 직렬화를 해야함(serialize())를 해야함\r\n");
      out.write("	// form 요소만 가능\r\n");
      out.write("\r\n");
      out.write("	$(\"#btn\").on(\"click\", function() {\r\n");
      out.write("		var param = $(\"#myform\").serialize();\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : \"/MyController11\",\r\n");
      out.write("			dataType : \"text\",\r\n");
      out.write("			method : \"get\",\r\n");
      out.write("			data : param,\r\n");
      out.write("			success : function(data) {\r\n");
      out.write("				if(data == 0){\r\n");
      out.write("					alert(\"가입실패\");\r\n");
      out.write("				}else{\r\n");
      out.write("					alert(\"가입성공\");\r\n");
      out.write("					getList();\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			error : function() {\r\n");
      out.write("				alert(\"다 시 해 3\")\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	getList();\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h2> 회원 정보 입력하기 </h2>\r\n");
      out.write("    <form name=\"myform\" method=\"post\" id=\"myform\" >\r\n");
      out.write("        <table>\r\n");
      out.write("            <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>아이디</th><th>패스워드</th><th>이름</th><th>나이</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <input type=\"text\" size=\"14\" name=\"m_id\" id=\"m_id\" /><br><span>중복여부</span>\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td> <input type=\"password\" size=\"8\" name=\"m_pw\" ></td>\r\n");
      out.write("                    <td> <input type=\"text\" size=\"14\" name=\"m_name\" ></td>\r\n");
      out.write("                    <td> <input type=\"number\" size=\"25\" name=\"m_age\" ></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </tbody>\r\n");
      out.write("            <tfoot>\r\n");
      out.write("                <tr><td colspan=\"7\" align=\"center\"><button id=\"btn\" disabled>가입하기</button></td></tr>\r\n");
      out.write("            </tfoot>\r\n");
      out.write("        </table>\r\n");
      out.write("    </form>\r\n");
      out.write("    <br /> <br /> <br />\r\n");
      out.write("    <h2> 회원 정보 보기 </h2>\r\n");
      out.write("    <div>\r\n");
      out.write("        <table id=\"list\">\r\n");
      out.write("            <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>번호</th><th>아이디</th><th>패스워드</th><th>이름</th><th>나이</th><th>날짜</th><th>삭제</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody id=\"tbody\"></tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
