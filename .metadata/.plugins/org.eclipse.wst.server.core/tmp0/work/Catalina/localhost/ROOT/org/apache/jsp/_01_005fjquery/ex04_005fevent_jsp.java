/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-26 06:40:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._01_005fjquery;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex04_005fevent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\"></style>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.0/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	//마우스 이벤트 : click(.on(), .bild()) ,dbclick(), .hover() mouseover(), mouseout(), .toggle()\r\n");
      out.write("	//키보드 이벤트 : keypress, keyup, keydown\r\n");
      out.write("	//form 이벤트 : submit, change, focus\r\n");
      out.write("\r\n");
      out.write("$(document).ready( function(){\r\n");
      out.write("	//클릭 이벤트\r\n");
      out.write("	$(\"#p1\").on(\"click\", function() {\r\n");
      out.write("		alert(\"클릭 성공\");\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(\"#p2\").bind(\"click\", function() {\r\n");
      out.write("		alert(\"클릭 성공\");\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//마우스 이벤트\r\n");
      out.write("	//$(\"#img\").hover(function() {\r\n");
      out.write("		//속성변경 => attr\r\n");
      out.write("	//	$(this).attr(\"src\",\"../images/pic_bulbon.gif\");\r\n");
      out.write("	//});\r\n");
      out.write("	\r\n");
      out.write("	//$(\"#img\").mouseover(function() {\r\n");
      out.write("	//	$(this).attr(\"src\",\"../images/pic_bulbon.gif\");\r\n");
      out.write("	//})\r\n");
      out.write("	//$(\"#img\").mouseout(function() {\r\n");
      out.write("	//	$(this).attr(\"src\",\"../images/pic_bulboff.gif\");\r\n");
      out.write("	//});\r\n");
      out.write("	\r\n");
      out.write("	//안해버림\r\n");
      out.write("	//$(\"#p3\").toggle(function() {\r\n");
      out.write("	//	$(\"#img\").attr(\"src\",\"../images/pic_bulbon.gif\");\r\n");
      out.write("	//}, function() {\r\n");
      out.write("	//	$(\"#img2\").attr(\"src\",\"../images/pic_bulboff.gif\");\r\n");
      out.write("	//});\r\n");
      out.write("	\r\n");
      out.write("	//keyup : 글자를 입력하면\r\n");
      out.write("	//보통 input에서  val() = value\r\n");
      out.write("	$(\"#name\").keyup(function(){\r\n");
      out.write("		var name = $(this).val();\r\n");
      out.write("		if(name.length >= 4)\r\n");
      out.write("		alert(name);\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//체크박스 : change(), select(), radio\r\n");
      out.write("	$(\"#chk\").change(function() {\r\n");
      out.write("		// var str = $(\"#addr\").val();\r\n");
      out.write("		// $(\"#addr2\").val(str);\r\n");
      out.write("		var str = $(\"#addr\").val();\r\n");
      out.write("		if($(this).is(\":checked\")){ //.is(\":checked\") => 체크가 된 상태인가?\r\n");
      out.write("			$(\"#addr2\").val(str);\r\n");
      out.write("		}else{\r\n");
      out.write("			$(\"#addr2\").val(\"\");\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	//라디오\r\n");
      out.write("	$(\"input[name=gender]\").change(function() {\r\n");
      out.write("		var res = $(this).val();\r\n");
      out.write("	$(\"#res\").text(res);\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(\"#pwd2\").keyup(function() {\r\n");
      out.write("		if($(\"#pwd\").val() == $(\"#pwd2\").val()){\r\n");
      out.write("			$(\"#s1\").html(\"<b>암호가 맞네요</b>\");\r\n");
      out.write("		}else{\r\n");
      out.write("			$(\"#s1\").html(\"<b>암호가 틀리네요</b>\");\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<p><span id=\"p1\">이벤트 처리</span></p>\r\n");
      out.write("	<p><span id=\"p2\">이벤트 처리</span></p>\r\n");
      out.write("	<p><span id=\"p3\">풉풉풉풉풉</span></p>\r\n");
      out.write("	<p><img id=\"img\" src=\"../images/pic_bulboff.gif\"></p>\r\n");
      out.write("	<p><img id=\"img2\" src=\"../images/pic_bulbon.gif\"></p>\r\n");
      out.write("	<p><input type=\"text\" name=\"name\" id=\"name\"></p>\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<p>주소 : <input type=\"text\" name=\"addr\" id=\"addr\"></p>\r\n");
      out.write("	<p><input type=\"checkbox\" id=\"chk\">상동</p>\r\n");
      out.write("	<p>주소 : <input type=\"text\" name=\"addr2\" id=\"addr2\"></p>\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<p>성별 : <input type=\"radio\" name=\"gender\" value=\"남자\">남자\r\n");
      out.write("			 <input type=\"radio\" name=\"gender\" value=\"여자\">여자\r\n");
      out.write("			 <input type=\"radio\" name=\"gender\" value=\"외국인\">외국인\r\n");
      out.write("	</p>\r\n");
      out.write("	<div id=\"res\"></div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<p>비밀번호 : <input type=\"password\" name=\"pwd\" id=\"pwd\"></p>\r\n");
      out.write("	<p>비밀번호 확인 : <input type=\"password\" name=\"pwd2\" id=\"pwd2\"></p>\r\n");
      out.write("	<p><span id=\"s1\"></span></p>	\r\n");
      out.write("	\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
